<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jaeeun Lee – C</title>
    <link>/docs/c/</link>
    <description>Recent content in C on Jaeeun Lee</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 06 Nov 2020 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="/docs/c/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: 가변인자(variadic arguments)</title>
      <link>/docs/c/variadicarguments/</link>
      <pubDate>Fri, 06 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/docs/c/variadicarguments/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;[정의]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;인수의 개수와 타입이 미리 정해져 있지 않다는 뜻.&lt;/p&gt;
&lt;p&gt;변수의 개수가 그때그때 변할 수 있는 인자.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[주의사항]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;가변인수 함수는 반드시 하나 이상의 고정인수 필요. → ap를 초기화 하기 위해서 마지막 고정인수의 번지를 알아야 하기 때문&lt;/p&gt;
&lt;p&gt;함수 내부에서 자신에게 전달된 가변 인수의 개수를 알 수 있도록 해야함. → 전달 될 수 있는 인수 의 개수는 제한 없음. 컴파일러는 인수 개수를 점검하지 않음. 그래서 개수를 알려주지 않으면 함수 내부에서 인수의 개수를 알 방법이 없음. 호출측이 정보를 제공해야함.&lt;/p&gt;
&lt;p&gt;함수 내부에서 각각의 가변인수 타입을 알 수 있어야 함. → va_arg의 사용을 위함.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[기본구조]&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdarg.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;varFunc&lt;/span&gt;( &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; fix, ... )
{
    va_list ap; &lt;span style=&#34;color:#75715e&#34;&gt;/* 현재 읽고 있는 번지를 기억하기 위한 변수 */&lt;/span&gt;
    va_start( ap, fix ); &lt;span style=&#34;color:#75715e&#34;&gt;/* 가변인수를 읽기 위한 준비 */&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt;( &lt;span style=&#34;color:#75715e&#34;&gt;/* 모든 인수를 읽을 때 까지 */&lt;/span&gt; )
    {
        va_arg( ap, &lt;span style=&#34;color:#75715e&#34;&gt;/* 인수타입 */&lt;/span&gt; ) ; &lt;span style=&#34;color:#75715e&#34;&gt;/* 가변인수 읽기 */&lt;/span&gt;
    }
    va_end(ap); &lt;span style=&#34;color:#75715e&#34;&gt;/* 뒷정리 */&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;va_list ap;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;함수로 전달되는 인수들은 스택(stack)에 저장되며 함수는 스택에서 인수를 꺼내씀. 스택에 있는 인수를 읽을 때 포인터 연산을 해야하는데 현재 읽고 있는 번지를 기억하기 위해 va_list형 포인터 변수를 사용.
va_list타입은 char *형으로 정의되어있음. 스택의 인수를 가리키는 포인터 타입.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;va_start(ap, 마지막 고정인수)&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ap 포인터 변수가 첫 번째 가변인수를 가리키도록 초기화하는 함수.
두번째 인자는 가변인수의 시작 변수를 찾기 위한 역할. (그 다음 번지가 가변인수의 시작번지)
→ va_start 내부에서 ap가 마지막 고정 인수 다음 번지를 가리키도록 함.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;va_arg(ap, 인수타입)&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;가변인수를 읽는 함수.
ap가 가리키는 번지의 데이터를 가변인수로 읽음.
두번 째 인수는 가변인수의 데이터형을 나타냄. (❗char, float는 사용 불가능)
ex) ap위치에 있는 정수값을 읽고 싶을 때 : va_arg(ap, int)
    ap위치에 있는 실수 값을 읽고 싶을 떄 : va_arg(ap, double)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;va_end(ap)&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;가변인수를 읽은 후 함수가 정상적으로 리턴되도록 도와줌.
va_end가 호출되면 ap가 변경되므로 va_start를 호출하지 않고는 가변인수를 다시 읽을 수 없도록 함.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;[참고]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://aossuper8.tistory.com/17&#34;&gt;https://aossuper8.tistory.com/17&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blankspace-dev.tistory.com/235&#34;&gt;https://blankspace-dev.tistory.com/235&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
